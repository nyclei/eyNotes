{
  "labels": {
    "DCOS_PACKAGE_OPTIONS": "eyJjb25uZWN0Ijp7Im5hbWUiOiJjb25uZWN0IiwidmlydHVhbF9uZXR3b3JrX2VuYWJsZWQiOmZhbHNlLCJ2aXJ0dWFsX25ldHdvcmtfbmFtZSI6ImRjb3MiLCJpbnN0YW5jZXMiOjEsImNwdXMiOjIsIm1lbSI6MTAyNCwiaGVhcCI6NzY4LCJyb2xlIjoiKiIsImdyb3VwX2lkIjoiZGNvcy1jb25uZWN0LWdyb3VwIiwia2V5X2NvbnZlcnRlciI6ImlvLmNvbmZsdWVudC5jb25uZWN0LmF2cm8uQXZyb0NvbnZlcnRlciIsImtleV9jb252ZXJ0ZXJfc2NoZW1hX2VuYWJsZSI6dHJ1ZSwidmFsdWVfY29udmVydGVyIjoiaW8uY29uZmx1ZW50LmNvbm5lY3QuYXZyby5BdnJvQ29udmVydGVyIiwidmFsdWVfY29udmVydGVyX3NjaGVtYV9lbmFibGUiOnRydWV9LCJrYWZrYSI6eyJib290c3RyYXBfc2VydmVycyI6ImJyb2tlci5jb25mbHVlbnQta2Fma2EubDRsYi50aGlzZGNvcy5kaXJlY3Rvcnk6OTA5MiIsInpvb2tlZXBlcl9jb25uZWN0IjoibWFzdGVyLm1lc29zOjIxODEvZGNvcy1zZXJ2aWNlLWNvbmZsdWVudC1rYWZrYSIsImNsaWVudF9zZWN1cml0eV9wcm90b2NvbCI6IlBMQUlOVEVYVCIsImtlcmJlcm9zX2VuYWJsZWQiOmZhbHNlLCJjbGllbnRfc2FzbF9tZWNoYW5pc20iOiJHU1NBUEkiLCJjbGllbnRfc2FzbF9rZXJiZXJvc19zZXJ2aWNlX25hbWUiOiJrYWZrYSIsImtlcmJlcm9zX2tleXRhYl9zZWNyZXQiOiJfX2Rjb3NfYmFzZTY0X19fa2V5dGFiIiwia2VyYmVyb3NfamFhc19zZWNyZXQiOiJqYWFzIiwia2VyYmVyb3Nfa3JiNV9zZWNyZXQiOiJrcmI1In0sInNjaGVtYS1yZWdpc3RyeSI6eyJ1cmwiOiJodHRwOi8vc2NoZW1hLXJlZ2lzdHJ5Lm1hcmF0aG9uLmw0bGIudGhpc2Rjb3MuZGlyZWN0b3J5OjgwODEifX0=",
    "DCOS_PACKAGE_SOURCE": "https://universe.mesosphere.com/repo",
    "HAPROXY_GROUP": "external",
    "DCOS_PACKAGE_METADATA": "eyJwYWNrYWdpbmdWZXJzaW9uIjoiNC4wIiwibmFtZSI6ImNvbmZsdWVudC1jb25uZWN0IiwidmVyc2lvbiI6IjEuMS4wLTQuMC4wIiwibWFpbnRhaW5lciI6InBhcnRuZXItc3VwcG9ydEBjb25mbHVlbnQuaW8iLCJkZXNjcmlwdGlvbiI6IkNvbmZsdWVudCBDb25uZWN0IHdvcmtlci4gSW5jbHVkZXMgUmVwbGljYXRvciBDb25uZWN0b3IuXG5cblx0RG9jdW1lbnRhdGlvbjogaHR0cDovL2RvY3MuY29uZmx1ZW50LmlvLzQuMC4wL2Nvbm5lY3QvbWFuYWdpbmcuaHRtbCIsInRhZ3MiOlsia2Fma2EiLCJjb25mbHVlbnQiLCJjb25uZWN0Il0sInNlbGVjdGVkIjpmYWxzZSwic2NtIjoiaHR0cHM6Ly9naXRodWIuY29tL2NvbmZsdWVudGluYy9rYWZrYSIsImZyYW1ld29yayI6ZmFsc2UsInByZUluc3RhbGxOb3RlcyI6IlByZXBhcmluZyB0byBpbnN0YWxsIGNvbmZsdWVudC1jb25uZWN0IiwicG9zdEluc3RhbGxOb3RlcyI6ImNvbmZsdWVudC1jb25uZWN0IGhhcyBiZWVuIGluc3RhbGxlZC4iLCJwb3N0VW5pbnN0YWxsTm90ZXMiOiJjb25mbHVlbnQtY29ubmVjdCB3YXMgdW5pbnN0YWxsZWQgc3VjY2Vzc2Z1bGx5LiIsImxpY2Vuc2VzIjpbeyJuYW1lIjoiQXBhY2hlIExpY2Vuc2UgdjIiLCJ1cmwiOiJodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wIn1dLCJpbWFnZXMiOnsiaWNvbi1zbWFsbCI6Imh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vY29uZmx1ZW50LW1lc29zLWRldmVsL0NvbmZJY29uX3NtYWxsLnBuZyIsImljb24tbWVkaXVtIjoiaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9jb25mbHVlbnQtbWVzb3MtZGV2ZWwvQ29uZkljb25fbWVkaXVtLnBuZyIsImljb24tbGFyZ2UiOiJodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL2NvbmZsdWVudC1tZXNvcy1kZXZlbC9Db25mSWNvbl9sYXJnZS5wbmcifX0=",
    "DCOS_PACKAGE_DEFINITION": "",
    "HAPROXY_0_HTTP_BACKEND_PROXYPASS_PATH": "/kafka-connect",
    "HAPROXY_0_PATH": "/kafka-connect",
    "DCOS_PACKAGE_VERSION": "1.1.0-4.0.0",
    "DCOS_PACKAGE_NAME": "confluent-connect",
    "HAPROXY_0_VHOST": "10.16.6.19,10.16.4.176"
  },
  "id": "/confluent/connect",
  "acceptedResourceRoles": [
    "*"
  ],
  "backoffFactor": 1.15,
  "backoffSeconds": 1,
  "cmd": "export CONNECT_REST_HOST_NAME=0.0.0.0 && export CONNECT_REST_PORT=$PORT0 && /etc/confluent/docker/run",
  "container": {
    "type": "MESOS",
    "volumes": [],
    "docker": {
      "image": "cyanconfluent/cp-kafka-connect-with-replicator:4.0.0-1",
      "forcePullImage": false,
      "parameters": []
    }
  },
  "cpus": 2,
  "disk": 0,
  "env": {
    "CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE": "true",
    "CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_TRUSTSTORE_PASSWORD": "changeit",
    "CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE": "true",
    "CONNECT_PRODUCER_SSL_KEYSTORE_PASSWORD": "changeit",
    "CONNECT_CONSUMER_INTERCEPTOR_CLASSES": "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor",
    "CONNECT_CONSUMER_SECURITY_PROTOCOL": "PLAINTEXT",
    "CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEY_PASSWORD": "changeit",
    "CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEYSTORE_LOCATION": "/tmp/kafka-keystore.jks",
    "CONNECT_PRODUCER_INTERCEPTOR_CLASSES": "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor",
    "CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL": "http://schema-registry.marathon.l4lb.thisdcos.directory:8081",
    "CONNECT_CONSUMER_SSL_TRUSTSTORE_LOCATION": "/tmp/kafka-truststore.jks",
    "CONNECT_KEY_CONVERTER": "io.confluent.connect.avro.AvroConverter",
    "CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEYSTORE_PASSWORD": "changeit",
    "CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL": "PLAINTEXT",
    "CONNECT_PRODUCER_SSL_TRUSTSTORE_LOCATION": "/tmp/kafka-truststore.jks",
    "CONNECT_CONSUMER_SSL_KEY_PASSWORD": "changeit",
    "KAFKA_OPTS": "-Djavax.net.ssl.trustStore=/tmp/kafka-truststore.jks -Djavax.net.ssl.trustStorePassword=changeit",
    "CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEYSTORE_LOCATION": "/tmp/kafka-keystore.jks",
    "CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEYSTORE_PASSWORD": "changeit",
    "CONNECT_PRODUCER_SSL_TRUSTSTORE_PASSWORD": "changeit",
    "CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL": "http://schema-registry.marathon.l4lb.thisdcos.directory:8081",
    "CONNECT_CONSUMER_SSL_TRUSTSTORE_PASSWORD": "changeit",
    "CONNECT_SSL_KEYSTORE_LOCATION": "/tmp/kafka-keystore.jks",
    "CONNECT_CONSUMER_SSL_KEYSTORE_PASSWORD": "changeit",
    "CONNECT_SASL_MECHANISM": "GSSAPI",
    "CONNECT_PLUGIN_PATH": "/usr/share/java",
    "CONNECT_SSL_TRUSTSTORE_PASSWORD": "changeit",
    "CONNECT_SSL_TRUSTSTORE_LOCATION": "/tmp/kafka-truststore.jks",
    "CONNECT_SECURITY_PROTOCOL": "PLAINTEXT",
    "CONNECT_SSL_KEY_PASSWORD": "changeit",
    "CONNECT_CONSUMER_SSL_KEYSTORE_LOCATION": "/tmp/kafka-keystore.jks",
    "CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_TRUSTSTORE_LOCATION": "/tmp/kafka-truststore.jks",
    "CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEY_PASSWORD": "changeit",
    "CONNECT_BOOTSTRAP_SERVERS": "broker.confluent-kafka.l4lb.thisdcos.directory:9092",
    "CONNECT_GROUP_ID": "dcos-connect-group",
    "CONNECT_PRODUCER_SSL_KEYSTORE_LOCATION": "/tmp/kafka-keystore.jks",
    "CONNECT_INTERNAL_KEY_CONVERTER": "org.apache.kafka.connect.json.JsonConverter",
    "CONNECT_STATUS_STORAGE_TOPIC": "dcos-connect-group-status",
    "CONNECT_VALUE_CONVERTER": "io.confluent.connect.avro.AvroConverter",
    "CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM": "GSSAPI",
    "CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_TRUSTSTORE_LOCATION": "/tmp/kafka-truststore.jks",
    "CONNECT_PRODUCER_SSL_KEY_PASSWORD": "changeit",
    "CONNECT_ZOOKEEPER_CONNECT": "master.mesos:2181/dcos-service-confluent-kafka",
    "CONNECT_SASL_KERBEROS_SERVICE_NAME": "kafka",
    "CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM": "GSSAPI",
    "KAFKA_HEAP_OPTS": "-Xmx768M",
    "CONNECT_INTERNAL_VALUE_CONVERTER": "org.apache.kafka.connect.json.JsonConverter",
    "CONNECT_OFFSET_STORAGE_TOPIC": "dcos-connect-group-offset",
    "CONNECT_OPTS": "-Djavax.net.ssl.trustStore=/tmp/kafka-truststore.jks -Djavax.net.ssl.trustStorePassword=changeit",
    "CONNECT_SSL_KEYSTORE_PASSWORD": "changeit",
    "CONNECT_CONFIG_STORAGE_TOPIC": "dcos-connect-group-config",
    "CONNECT_PRODUCER_SECURITY_PROTOCOL": "PLAINTEXT",
    "CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_TRUSTSTORE_PASSWORD": "changeit",
    "CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL": "PLAINTEXT"
  },
  "healthChecks": [
    {
      "gracePeriodSeconds": 180,
      "intervalSeconds": 10,
      "maxConsecutiveFailures": 3,
      "timeoutSeconds": 20,
      "delaySeconds": 15,
      "protocol": "COMMAND",
      "command": {
        "value": "curl -k -I http://localhost:$PORT0 | grep \"HTTP/1.1 200 OK\""
      }
    }
  ],
  "instances": 1,
  "maxLaunchDelaySeconds": 3600,
  "mem": 1024,
  "gpus": 0,
  "networks": [
    {
      "mode": "host"
    }
  ],
  "portDefinitions": [
    {
      "labels": {
        "VIP_0": "connect:8083"
      },
      "name": "connect",
      "protocol": "tcp",
      "port": 10119
    }
  ],
  "requirePorts": false,
  "upgradeStrategy": {
    "maximumOverCapacity": 1,
    "minimumHealthCapacity": 1
  },
  "killSelection": "YOUNGEST_FIRST",
  "unreachableStrategy": {
    "inactiveAfterSeconds": 0,
    "expungeAfterSeconds": 0
  },
  "fetch": [],
  "constraints": []
}
